/*Sample Equipment Creator 

This simple console application demonstrates using the Intelligent InSites Web 
Services API to create new equipment from data entered into a command line. 
This class implements the APIClient class to perform HTTP requests.*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using System.Xml.XPath;
using System.IO;
using System.Net;
using IntelligentInSites.Api.Rest;

namespace IntelligentInSites.CodeSamples {
    class EquipmentCreator {
        static void Main(string[] args) {
            APIClient client = new APIClient(UriScheme.Https, "insites-dev.intelligentinsites.net", "username", "password", 443);

            APIParams createParams = new APIParams();
            //Get the required parameters from user
            Console.Write("name <IV Pole>: ");
            createParams.Add("name", Console.ReadLine().Trim());

            Console.Write("short-name <iv1>: ");
            createParams.Add("short-name", Console.ReadLine().Trim());

            Console.Write("type <Bxc6t>: ");
            createParams.Add("type", Console.ReadLine().Trim());

            Console.Write("status <Bxc>: ");
            createParams.Add("status", Console.ReadLine().Trim());

            Console.Write("service-status <Bxc>: ");
            createParams.Add("service-status", Console.ReadLine().Trim());

            //Perform a POST request to create a resource
            APIResponse createResponse = client.Post("/api/2.0/rest/equipment.xml", createParams);
            Console.WriteLine("\nThe web service responded with:");
            Console.WriteLine(createResponse.ResponseData);

            //Parse the response to get the id of the new equipment
            String equipmentId = ParseEquipmentIdFromXMLResponse(createResponse);
            Console.WriteLine("Parsed the id from the response. The id is: " + equipmentId);

            //Assign a sensor to the equipment by using the take-sensor method. Sensor resources are identified by 
            //two fields, a key (the 'provider' field), and a value (the 'label' field).
            Console.WriteLine("\nAssigning an existing sensor to our new equipment...");
            Console.Write("sensor to assign <your-rtls.6025> ");    //provider.label
            String sensorId = Console.ReadLine().Trim();

            APIParams assignParams = new APIParams();
            assignParams.Add("sensor", sensorId);
            APIResponse assignResponse = client.Post("/api/2.0/rest/equipment/" + equipmentId + "/take-sensor.xml", assignParams);
            Console.WriteLine("\nAssigned a sensor to the new equipment. The web service responded with:");
            Console.WriteLine(assignResponse.ResponseData);

            Console.WriteLine("\nPress any key to quit");
            Console.Read();
        }

        /// <summary>
        /// Parses an InSites success HTTP response, and finds the ID of a newly created equipment resource. The response format must be XML.
        /// </summary>
        /// <param name="success">An <c>ApiResponse</c> representing an InSites XML response. The type of response required is one generated by the API call: POST /api/2.0/rest/equipment.xml.</param>
        /// <returns>The ID of the created equipment.</returns>
        public static string ParseEquipmentIdFromXMLResponse(APIResponse response) {
            byte[] bytes = Encoding.ASCII.GetBytes(response.ResponseData);
            XmlTextReader reader = new XmlTextReader(new MemoryStream(bytes));
            try {
                while (reader.Read()) {
                    if (reader.NodeType == XmlNodeType.Element) {
                        if (reader.Name == "value") {
                            return reader.GetAttribute("id");
                        }
                    }
                }
            }
            catch (Exception e) {
                throw new Exception("Equipment ID not found", e);
            }
            finally {
                reader.Close();
            }
            throw new Exception("Equipment ID not found");
        }
    }
}
